<?php

/**
 * Advisor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Advisor extends BaseAdvisor
{
/*
	 *restituisce un array popolato con le regioni assegnate all'advisor. Ogni membro dell'array Ã¨ un array
	 *del tipo ('nome'=>'Liguria','id'=>1300)
	 *Id Ã¨ l'id della regione. 
	 */
	public function getRegioni(){
		/*$q=Doctrine_Query::create()->
			select('DISTINCT re.nome as nome,pr.id, re.id as id,ad.id' )->
			from('Advisor ad')->
			leftjoin('ad.Province pr')->
			leftjoin('pr.Regione re')->
			where('ad.id=?',$this->id)->
			orderBy('re.nome');
		 	 	*/
		$q=Doctrine_Query::create()->
	 	 	select('DISTINCT re.nome as nome, re.id,pr.id as id,pr.id,fa.id' )->
	 	 	from('Regione re')->
	 	 	leftjoin('re.Province pr')->
	 	 	leftjoin('pr.Farmacie fa')->
	 	 	where('fa.advisor_id=?',$this->id)->
			orderBy('pr.nome');
		if(!$r=$q->fetchArray()){
			return array();
		}
		foreach($r as $re){
			$result[$re['id']]=$re['nome'];
		}
		return $result;
	}
	
	/*
	 *Restituisce un array le cui componenti sono array con i seguenti campi
	 *nome: nome della provincia
	 *id: sigla della provincia
	 */
	public function getProvince(){
	 /*$q=Doctrine_Query::create()->
 		select(' pr.nome as nome, pr.id as id,ag.id' )->
			from('Advisor ag')->
			leftjoin('ag.Province pr')->
			where('ag.id=?',$this->id)->
			orderBy('pr.nome');*/
 	 	$q=Doctrine_Query::create()->
	 	 	select(' pr.nome as nome, pr.id as id,pr.id,fa.id' )->
	 	 	from('Provincia pr')->
	 	 	leftjoin('pr.Farmacie fa')->
	 	 	where('fa.advisor_id=?',$this->id)->
			orderBy('pr.nome');
		if(!$r=$q->execute(array(),Doctrine_Core::HYDRATE_ARRAY)){
			return array();
		}
		foreach($r as $pr){
			$result[$pr['id']]=$pr['nome'];
		}
		return $result;
	}
	/*
	 * restituisce un array() le cui componenti sono array di componenti agente_id e nome_completo
	 */
	public function getAgenti(){
		$q=Doctrine_Query::create()->
			select('ad.id,adut.nome_completo,ag.id,agut.nome_completo,adut.id')->
			from('Advisor ad')->
			leftjoin('ad.Utente adut')->
			leftjoin('ad.Agenti ag')->
			leftjoin('ag.Utente agut')->
			where('ad.id=?',$this->id);
		if(!$r=$q->fetchArray()){
			return array();
		}
		$result=array();
		foreach ($r[0]['Agenti'] as $ag){
			$result[$ag['id']]=$ag['Utente']['nome_completo'];
		}
		return $result;
	}
	
	
	

}