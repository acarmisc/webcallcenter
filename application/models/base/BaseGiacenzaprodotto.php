<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Giacenzaprodotto', 'default');

/**
 * BaseGiacenzaprodotto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $prodotto_id
 * @property integer $quantita
 * @property integer $reportstorecheck_id
 * @property Prodotto $Prodotto
 * @property Reportstorecheck $Reportstorecheck
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGiacenzaprodotto extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('giacenzaprodotto');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('prodotto_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('quantita', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('reportstorecheck_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Reportstorecheck', array(
             'local' => 'reportstorecheck_id',
             'foreign' => 'id',
        	 'onUpdate'=> 'CASCADE',
        	 'onDelete' => 'NO ACTION'));

        $this->hasOne('Prodotto', array(
             'local' => 'prodotto_id',
             'foreign' => 'id'));
    }
}