<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RichiestaTipoevento', 'default');

/**
 * BaseRichiestaTipoevento
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $farmacia_id
 * @property integer $tipoevento_id
 * @property integer $numero_eventi
 * @property integer $inserito_da_agente
 * @property Farmacia $Farmacia
 * @property Tipoevento $Tipoevento
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRichiestaTipoevento extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('richiesta_tipoevento');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('farmacia_id', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             'fixed' => true,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('tipoevento_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('numero_eventi', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => true,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('inserito_da_agente', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('deleted_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Farmacia', array(
             'local' => 'farmacia_id',
             'foreign' => 'id',
        	 'onUpdate' => 'CASCADE'));

        $this->hasOne('Tipoevento', array(
             'local' => 'tipoevento_id',
             'foreign' => 'id',
             'onDelete' => 'NO ACTION',
        	 'onUpdate' => 'CASCADE'));
  
            
        $softdelete0 = new Doctrine_Template_SoftDelete();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($softdelete0);
        $this->actAs($timestampable0);
    }
}