<?php

/**
 * BaseMicroarea
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id
 * @property string $descrizione
 * @property string $area_id
 * @property string $provincia_id
 * @property string $advisor_id
 * @property Area $Area
 * @property Advisor $Advisor
 * @property Provincia $Provincia
 * @property Doctrine_Collection $Farmacie
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMicroarea extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('microarea');
        $this->hasColumn('id', 'string', 5, array(
             'type' => 'string',
             'primary' => true,
             'fixed' => 1,
             'length' => '5',
             ));
        $this->hasColumn('descrizione', 'string', 20, array(
             'type' => 'string',
             'default' => '',
             'length' => '20',
             ));
        $this->hasColumn('area_id', 'string', 5, array(
             'type' => 'string',
             'notnull' => true,
             'fixed' => 1,
             'default' => '',
             'length' => '5',
             ));
        $this->hasColumn('provincia_id', 'string', 2, array(
             'type' => 'string',
             'notnull' => true,
             'fixed' => 1,
             'default' => '',
             'length' => '2',
             ));
        $this->hasColumn('advisor_id', 'string', 5, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => '5',
             ));

        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Area', array(
             'local' => 'area_id',
             'foreign' => 'id',
             'onUpdate' => 'cascade'));

        $this->hasOne('Advisor', array(
             'local' => 'advisor_id',
             'foreign' => 'id'));

        $this->hasOne('Provincia', array(
             'local' => 'provincia_id',
             'foreign' => 'id'));

        $this->hasMany('Farmacia as Farmacie', array(
             'local' => 'id',
             'foreign' => 'microarea_id'));
    }
}