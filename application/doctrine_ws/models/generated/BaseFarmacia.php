<?php

/**
 * BaseFarmacia
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $id
 * @property string $denominazione
 * @property string $indirizzo
 * @property string $cap
 * @property string $localita
 * @property string $partita_iva
 * @property string $numtel
 * @property string $numfax
 * @property string $email
 * @property string $contatto
 * @property string $numtel_contatto
 * @property string $email_contatto
 * @property enum $stato
 * @property string $linea_id
 * @property string $microarea_id
 * @property Linea $Linea
 * @property Microarea $Microarea
 * @property Doctrine_Collection $Attivita
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFarmacia extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('farmacia');
        $this->hasColumn('id', 'string', 20, array(
             'type' => 'string',
             'primary' => true,
             'fixed' => 1,
             'length' => '20',
             ));
        $this->hasColumn('denominazione', 'string', 100, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => '100',
             ));
        $this->hasColumn('indirizzo', 'string', 100, array(
             'type' => 'string',
             'default' => '',
             'length' => '100',
             ));
        $this->hasColumn('cap', 'string', 5, array(
             'type' => 'string',
             'default' => '',
             'fixed' => 1,
             'length' => '5',
             ));
        $this->hasColumn('localita', 'string', 50, array(
             'type' => 'string',
             'notnull' => true,
             'default' => '',
             'length' => '50',
             ));
        $this->hasColumn('partita_iva', 'string', 20, array(
             'type' => 'string',
             'default' => '',
             'length' => '20',
             ));
        $this->hasColumn('numtel', 'string', 15, array(
             'type' => 'string',
             'default' => '',
             'length' => '15',
             ));
        $this->hasColumn('numfax', 'string', 15, array(
             'type' => 'string',
             'default' => '',
             'length' => '15',
             ));
        $this->hasColumn('email', 'string', 15, array(
             'type' => 'string',
             'default' => '',
             'length' => '15',
             ));
        $this->hasColumn('contatto', 'string', 50, array(
             'type' => 'string',
             'default' => '',
             'length' => '50',
             ));
        $this->hasColumn('numtel_contatto', 'string', 15, array(
             'type' => 'string',
             'default' => '',
             'length' => '15',
             ));
        $this->hasColumn('email_contatto', 'string', 15, array(
             'type' => 'string',
             'default' => '',
             'length' => '15',
             ));
        $this->hasColumn('stato', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'attivo',
              1 => 'attivabile',
              2 => 'non interessato',
              3 => 'attivato da ADV',
             ),
             'default' => 'attivabile',
             ));
        $this->hasColumn('linea_id', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '10',
             ));
        $this->hasColumn('microarea_id', 'string', 5, array(
             'type' => 'string',
             'fixed' => 1,
             'length' => '5',
             ));


        $this->index('Linea_id', array(
             'fields' => 
             array(
              0 => 'linea_id',
             ),
             ));
        $this->index('Microarea_id', array(
             'fields' => 
             array(
              0 => 'microarea_id',
             ),
             ));
        $this->option('collate', 'utf8_general_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Linea', array(
             'local' => 'linea_id',
             'foreign' => 'id',
             'onUpdate' => 'cascade'));

        $this->hasOne('Microarea', array(
             'local' => 'microarea_id',
             'foreign' => 'id',
             'onUpdate' => 'cascade'));

        $this->hasMany('Attivita', array(
             'local' => 'id',
             'foreign' => 'farmacia_id'));

        $softdelete0 = new Doctrine_Template_SoftDelete();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($softdelete0);
        $this->actAs($timestampable0);
    }
}